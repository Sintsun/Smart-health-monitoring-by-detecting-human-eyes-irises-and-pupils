Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$Level10HRV
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level10_hrv <- na.omit(level10_hrv)
# Level-10 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
# 重复测量变异数分析
ratio_aov <- ezANOVA(data = subset(df_long, grepl("Ratio", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
hrv_aov <- ezANOVA(data = subset(df_long, grepl("HRV", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
print(ratio_aov)
print(hrv_aov)
# 执行符号检验和秩和检验的函数
run_sign_test <- function(data, var1, var2) {
diff <- sign(data[[var1]] - data[[var2]])
pos <- sum(diff == 1)
neg <- sum(diff == -1)
ties <- sum(diff == 0)
statistic <- min(pos, neg)
if (pos + neg == 0) {
p_value <- 1
} else {
p_value <- 2 * binom.test(statistic, pos + neg, p = 0.5, alternative = "two.sided")$p.value
}
return(list(statistic = statistic, p_value = p_value))
}
run_rank_sum_test <- function(data, var1, var2) {
rank_sum_test <- wilcox.test(data[[var1]], data[[var2]], alternative = "two.sided", distribution = "normal")
return(rank_sum_test)
}
# 执行 Ratio 的符号检验和秩和检验
ratio_tests <- list(
"R1 vs R2" = list(sign_test = run_sign_test(data, "R1Ratio", "R2Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "R2Ratio")),
"R1 vs Level1" = list(sign_test = run_sign_test(data, "R1Ratio", "Level1Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "Level1Ratio")),
"R1 vs Level15" = list(sign_test = run_sign_test(data, "R1Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "Level15Ratio")),
"R2 vs Level1" = list(sign_test = run_sign_test(data, "R2Ratio", "Level1Ratio"),
rank_sum_test = run_rank_sum_test(data, "R2Ratio", "Level1Ratio")),
"R2 vs Level15" = list(sign_test = run_sign_test(data, "R2Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "R2Ratio", "Level15Ratio")),
"Level1 vs Level15" = list(sign_test = run_sign_test(data, "Level1Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "Level1Ratio", "Level15Ratio"))
)
# 创建数据框用于存储 Ratio 的符号检验和秩和检验结果
ratio_sign_results <- data.frame(
Comparison = names(ratio_tests),
Statistic = sapply(ratio_tests, function(x) if ("sign_test" %in% names(x) && "statistic" %in% names(x$sign_test)) x$sign_test$statistic else NA),
p.value = sapply(ratio_tests, function(x) if ("sign_test" %in% names(x) && "p_value" %in% names(x$sign_test)) x$sign_test$p_value else NA)
)
ratio_rank_sum_results <- data.frame(
Comparison = names(ratio_tests),
Statistic = sapply(ratio_tests, function(x) if ("rank_sum_test" %in% names(x) && "statistic" %in% names(x$rank_sum_test)) x$rank_sum_test$statistic else NA),
p.value = sapply(ratio_tests, function(x) if ("rank_sum_test" %in% names(x) && "p.value" %in% names(x$rank_sum_test)) x$rank_sum_test$p.value else NA)
)
# 安装和加载必要的包
packages <- c("readxl", "ggpubr", "ez", "dplyr", "reshape2", "coin", "nparld", "gtools")
lapply(packages, library, character.only = TRUE)
# 设置工作目录
setwd("C:/Users/sints/OneDrive - City University of Hong Kong - Student/Desktop/Fyp Test/FypTest2 Data")
# 读取Excel文件
path <- "C:/Users/sints/OneDrive - City University of Hong Kong - Student/Desktop/Fyp Test/FypTest2 Data/test 2.xlsx"
data <- read_excel(path)
# 创建 Condition 变量
df_long <- reshape2::melt(data, id.vars = "participants",
measure.vars = c("R1Ratio", "R1HRV", "Level1Ratio", "Level1HRV",
"R2Ratio", "R2HRV", "Level15Ratio", "Level15HRV"),
variable.name = "Condition", value.name = "Value")
# 重复测量变异数分析
ratio_aov <- ezANOVA(data = subset(df_long, grepl("Ratio", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
hrv_aov <- ezANOVA(data = subset(df_long, grepl("HRV", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
print(ratio_aov)
# 执行符号检验和秩和检验的函数
run_sign_test <- function(data, var1, var2) {
diff <- sign(data[[var1]] - data[[var2]])
pos <- sum(diff == 1)
neg <- sum(diff == -1)
ties <- sum(diff == 0)
statistic <- min(pos, neg)
if (pos + neg == 0) {
p_value <- 1
} else {
p_value <- 2 * binom.test(statistic, pos + neg, p = 0.5, alternative = "two.sided")$p.value
}
return(list(statistic = statistic, p_value = p_value))
}
run_rank_sum_test <- function(data, var1, var2) {
rank_sum_test <- wilcox.test(data[[var1]], data[[var2]], alternative = "two.sided", distribution = "normal")
return(rank_sum_test)
}
hrv_aov <- ezANOVA(data = subset(df_long, grepl("HRV", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
# 读取Excel文件
path <- "C:/Users/sints/OneDrive - City University of Hong Kong - Student/Desktop/Fyp Test/FypTest2 Data/test 2.xlsx"
data <- read_excel(path)
# 创建 Condition 变量
df_long <- reshape2::melt(data, id.vars = "participants",
measure.vars = c("R1Ratio", "R1HRV", "Level1Ratio", "Level1HRV",
"R2Ratio", "R2HRV", "Level15Ratio", "Level15HRV"),
variable.name = "Condition", value.name = "Value")
# 重复测量变异数分析
ratio_aov <- ezANOVA(data = subset(df_long, grepl("Ratio", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
hrv_aov <- ezANOVA(data = subset(df_long, grepl("HRV", Condition)),
dv = .(Value), wid = .(participants), within = .(Condition), type = 3)
print(ratio_aov)
print(hrv_aov)
# HRV 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "HRV"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for HRV", x = "Level", y = "HRV") +
theme_bw() +
theme(legend.position = "none")
# HRV 条形图
hrv_data <- data[, c("participants", "R1HRV", "R2HRV", "Level1HRV", "Level15HRV")]
hrv_data <- melt(hrv_data, id.vars = "participants")
colnames(hrv_data)[2] <- "Condition"
ggplot(hrv_data , aes(x = Condition, y = value, fill = Condition)) +
geom_bar(stat = "summary", fun = mean, position = "dodge") +
labs(title = "Bar Plot for HRV Mean", x = "Condition", y = "Ratio") +
theme_bw()
# Ratio 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "Ratio"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for Ratio", x = "Level", y = "Ratio") +
theme_bw() +
theme(legend.position = "none")
# HRV 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "HRV"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for HRV", x = "Level", y = "HRV") +
theme_bw() +
theme(legend.position = "none")
# Ratio 条形图
ratio_data <- data[, c("participants", "R1Ratio", "R2Ratio", "Level1Ratio", "Level15Ratio")]
ratio_data <- melt(ratio_data, id.vars = "participants")
colnames(ratio_data)[2] <- "Condition"
ggplot(ratio_data, aes(x = Condition, y = value, fill = Condition)) +
geom_bar(stat = "summary", fun = mean, position = "dodge") +
labs(title = "Bar Plot for Ratio Mean", x = "Condition", y = "Ratio") +
theme_bw()
# HRV 条形图
hrv_data <- data[, c("participants", "R1HRV", "R2HRV", "Level1HRV", "Level15HRV")]
hrv_data <- melt(hrv_data, id.vars = "participants")
colnames(hrv_data)[2] <- "Condition"
ggplot(hrv_data , aes(x = Condition, y = value, fill = Condition)) +
geom_bar(stat = "summary", fun = mean, position = "dodge") +
labs(title = "Bar Plot for HRV Mean", x = "Condition", y = "Ratio") +
theme_bw()
# Ratio 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "Ratio"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for Ratio", x = "Level", y = "Ratio") +
theme_bw() +
theme(legend.position = "none")
# HRV 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "HRV"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for HRV", x = "Level", y = "HRV") +
theme_bw() +
theme(legend.position = "none")
# Ratio 条形图
ratio_data <- data[, c("participants", "R1Ratio", "R2Ratio", "Level1Ratio", "Level15Ratio")]
ratio_data <- melt(ratio_data, id.vars = "participants")
colnames(ratio_data)[2] <- "Condition"
ggplot(ratio_data, aes(x = Condition, y = value, fill = Condition)) +
geom_bar(stat = "summary", fun = mean, position = "dodge") +
labs(title = "Bar Plot for Ratio Mean", x = "Condition", y = "Ratio") +
theme_bw()
# HRV 条形图
hrv_data <- data[, c("participants", "R1HRV", "R2HRV", "Level1HRV", "Level15HRV")]
hrv_data <- melt(hrv_data, id.vars = "participants")
colnames(hrv_data)[2] <- "Condition"
ggplot(hrv_data , aes(x = Condition, y = value, fill = Condition)) +
geom_bar(stat = "summary", fun = mean, position = "dodge") +
labs(title = "Bar Plot for HRV Mean", x = "Condition", y = "Ratio") +
theme_bw()
# Ratio 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "Ratio"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for Ratio", x = "Level", y = "Ratio") +
theme_bw() +
theme(legend.position = "none")
# HRV 的小提琴图和箱线图
ggplot(subset(df_long, Measure == "HRV"), aes(x = Level, y = Value, fill = Level)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for HRV", x = "Level", y = "HRV") +
theme_bw() +
theme(legend.position = "none")
# Ratio 的小提琴图和箱线图
ggplot(subset(df_long, grepl("Ratio", Condition)), aes(x = Condition, y = Value, fill = Condition)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for Ratio", x = "Condition", y = "Ratio") +
theme_bw() +
theme(legend.position = "none")
# HRV 的小提琴图和箱线图
ggplot(subset(df_long, grepl("HRV", Condition)), aes(x = Condition, y = Value, fill = Condition)) +
geom_violin(trim = FALSE, scale = "area", adjust = 1, kernel = "gaussian", alpha = 0.6) +
geom_boxplot(width = 0.1, alpha = 0.6) +
labs(title = "Violin Plot with Boxplot for HRV", x = "Condition", y = "HRV") +
theme_bw() +
theme(legend.position = "none")
# 执行符号检验和秩和检验的函数
run_sign_test <- function(data, var1, var2) {
diff <- sign(data[[var1]] - data[[var2]])
pos <- sum(diff == 1)
neg <- sum(diff == -1)
ties <- sum(diff == 0)
statistic <- min(pos, neg)
if (pos + neg == 0) {
p_value <- 1
} else {
p_value <- 2 * binom.test(statistic, pos + neg, p = 0.5, alternative = "two.sided")$p.value
}
return(list(statistic = statistic, p_value = p_value))
}
run_rank_sum_test <- function(data, var1, var2) {
rank_sum_test <- wilcox.test(data[[var1]], data[[var2]], alternative = "two.sided", distribution = "normal")
return(rank_sum_test)
}
# 执行 Ratio 的符号检验和秩和检验
ratio_tests <- list(
"R1 vs R2" = list(sign_test = run_sign_test(data, "R1Ratio", "R2Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "R2Ratio")),
"R1 vs Level1" = list(sign_test = run_sign_test(data, "R1Ratio", "Level1Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "Level1Ratio")),
"R1 vs Level15" = list(sign_test = run_sign_test(data, "R1Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "R1Ratio", "Level15Ratio")),
"R2 vs Level1" = list(sign_test = run_sign_test(data, "R2Ratio", "Level1Ratio"),
rank_sum_test = run_rank_sum_test(data, "R2Ratio", "Level1Ratio")),
"R2 vs Level15" = list(sign_test = run_sign_test(data, "R2Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "R2Ratio", "Level15Ratio")),
"Level1 vs Level15" = list(sign_test = run_sign_test(data, "Level1Ratio", "Level15Ratio"),
rank_sum_test = run_rank_sum_test(data, "Level1Ratio", "Level15Ratio"))
)
# 创建数据框用于存储 Ratio 的符号检验和秩和检验结果
ratio_sign_results <- data.frame(
Comparison = names(ratio_tests),
Statistic = sapply(ratio_tests, function(x) if ("sign_test" %in% names(x) && "statistic" %in% names(x$sign_test)) x$sign_test$statistic else NA),
p.value = sapply(ratio_tests, function(x) if ("sign_test" %in% names(x) && "p_value" %in% names(x$sign_test)) x$sign_test$p_value else NA)
)
ratio_rank_sum_results <- data.frame(
Comparison = names(ratio_tests),
Statistic = sapply(ratio_tests, function(x) if ("rank_sum_test" %in% names(x) && "statistic" %in% names(x$rank_sum_test)) x$rank_sum_test$statistic else NA),
p.value = sapply(ratio_tests, function(x) if ("rank_sum_test" %in% names(x) && "p.value" %in% names(x$rank_sum_test)) x$rank_sum_test$p.value else NA)
)
# 执行 HRV 的符号检验和秩和检验
hrv_tests <- list(
"R1 vs R2" = list(sign_test = run_sign_test(data, "R1HRV", "R2HRV"),
rank_sum_test = run_rank_sum_test(data, "R1HRV", "R2HRV")),
"R1 vs Level1" = list(sign_test = run_sign_test(data, "R1HRV", "Level1HRV"),
rank_sum_test = run_rank_sum_test(data, "R1HRV", "Level1HRV")),
"R1 vs Level15" = list(sign_test = run_sign_test(data, "R1HRV", "Level15HRV"),
rank_sum_test = run_rank_sum_test(data, "R1HRV", "Level15HRV")),
"R2 vs Level1" = list(sign_test = run_sign_test(data, "R2HRV", "Level1HRV"),
rank_sum_test = run_rank_sum_test(data, "R2HRV", "Level1HRV")),
"R2 vs Level15" = list(sign_test = run_sign_test(data, "R2HRV", "Level15HRV"),
rank_sum_test = run_rank_sum_test(data, "R2HRV", "Level15HRV")),
"Level1 vs Level15" = list(sign_test = run_sign_test(data, "Level1HRV", "Level15HRV"),
rank_sum_test = run_rank_sum_test(data, "Level1HRV", "Level15HRV"))
)
hrv_sign_results <- data.frame(
Comparison = names(hrv_tests),
Statistic = sapply(hrv_tests, function(x) if ("sign_test" %in% names(x) && "statistic" %in% names(x$sign_test)) x$sign_test$statistic else NA),
p.value = sapply(hrv_tests, function(x) if ("sign_test" %in% names(x) && "p_value" %in% names(x$sign_test)) x$sign_test$p_value else NA)
)
hrv_rank_sum_results <- data.frame(
Comparison = names(hrv_tests),
Statistic = sapply(hrv_tests, function(x) if ("rank_sum_test" %in% names(x) && "statistic" %in% names(x$rank_sum_test)) x$rank_sum_test$statistic else NA),
p.value = sapply(hrv_tests, function(x) if ("rank_sum_test" %in% names(x) && "p.value" %in% names(x$rank_sum_test)) x$rank_sum_test$p.value else NA)
)
options(scipen = 999)
# 打印结果
print(ratio_sign_results)
print(ratio_rank_sum_results)
print(hrv_sign_results)
print(hrv_rank_sum_results)
