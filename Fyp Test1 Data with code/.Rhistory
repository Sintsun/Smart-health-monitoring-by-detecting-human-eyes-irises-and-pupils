ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
# Level-15 Ratio 數據
level1_ratio <- df$Level1Ratio
level15_ratio <- df$`Level-15Ratio`
# 提取 Level 1 HRV 和 Level 15 HRV 數據
level1_hrv <- df$Level1HRV
level15_hrv <- df$`Leve-l5HRV`
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level15_hrv <- na.omit(level15_hrv)
# Create difference vector
ratio_diff <- level15_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 15
result_hrv <- binom.test(sum(level15_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 15
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
negative_increases <- sum(ratio_diff < 0)
# 检查变量是否包含NA值，并在计算之前去除NA值
positive_increases <- sum(positive_increases, na.rm = TRUE)
total_non_ties <- sum(total_non_ties, na.rm = TRUE)
# 现在我们可以安全地进行if语句的检查
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# 输出结果
print(result_pupil)t_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
negative_increases <- sum(ratio_diff < 0)
# 检查变量是否包含NA值，并在计算之前去除NA值
positive_increases <- sum(positive_increases, na.rm = TRUE)
total_non_ties <- sum(total_non_ties, na.rm = TRUE)
# 现在我们可以安全地进行if语句的检查
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# 输出结果
print(result_pupil)t_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
# 检查变量是否包含NA值，并在计算之前去除NA值
positive_increases <- sum(positive_increases, na.rm = TRUE)
total_non_ties <- sum(total_non_ties, na.rm = TRUE)
# 现在我们可以安全地进行if语句的检查
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# 输出结果
print(result_pupil)
# Level-15 Ratio 數據
level1_ratio <- df$Level1Ratio
level15_ratio <- df$`Level-15Ratio`
# Level-15 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level15_ratio <- level1_ratio(level15_ratio)
# Create difference vector
ratio_diff <- level15_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 15
result_hrv <- binom.test(sum(level15_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# 检查变量是否包含NA值，并在计算之前去除NA值
positive_increases <- sum(positive_increases, na.rm = TRUE)
total_non_ties <- sum(total_non_ties, na.rm = TRUE)
# 现在我们可以安全地进行if语句的检查
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# 输出结果
print(result_pupil)
# Level-15 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level15_ratio <- level1_ratio(level15_ratio)
# Create difference vector
ratio_diff <- level15_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 15
result_hrv <- binom.test(sum(level15_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 15
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-15 Ratio 數據
level1_ratio <- df$Level1Ratio
level15_ratio <- df$`Level-15Ratio`
# 提取 Level 1 HRV 和 Level 15 HRV 數據
level1_hrv <- df$Level1HRV
level15_hrv <- df$`Leve-l5HRV`
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level15_hrv <- na.omit(level15_hrv)
# Level-15 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level15_ratio <- level1_ratio(level15_ratio)
# Create difference vector
ratio_diff <- level15_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 15
result_hrv <- binom.test(sum(level15_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# Level-15 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level15_ratio <- level1_ratio(level15_ratio)
# Level-15 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level15_ratio <- na.omit(level15_ratio)
# Create difference vector
ratio_diff <- level15_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 15
result_hrv <- binom.test(sum(level15_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 15
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (total_non_ties == 0) {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
} else if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
# Execute Wilcoxon signed rank test
result_hrv <- wilcox.test(level1_hrv, level15_hrv, alternative = "greater")
result_pupil <- wilcox.test(level1_ratio, level15_ratio, alternative = "less")
# Output results
print("HRV Wilcoxon Signed Rank Test Results:")
print(result_hrv)
print("Pupil Size Wilcoxon Signed Rank Test Results:")
print(result_pupil)
load("C:/Users/sints/OneDrive - City University of Hong Kong - Student/Desktop/Fyp Test/.RData")
getwd()
setwd("C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test")
path <- "C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test\\Fyp Data.xlsx"
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level-10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$`Level-10HRV`
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level10_hrv <- na.omit(level10_hrv)
# Level-10 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 10
result_hrv <- binom.test(sum(level10_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 10
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (total_non_ties == 0) {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
} else if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level-10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$`Level-10HRV`
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level10_hrv <- na.omit(level10_hrv)
# Level-10 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 10
result_hrv <- binom.test(sum(level10_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 10
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (total_non_ties == 0) {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
} else if (positive_increases > total_non_ties / 2) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "greater")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
# For pupil size one-sided test, assuming increase at level 10
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (total_non_ties == 0) {
result_pupil <- NA # 無法進行檢定
} else if (positive_increases >= negative_increases) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "less")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level-10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$`Level-10HRV`
level10_hrv <- df$`Level-10HRV`
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level-10Ratio`
install.packages("readxl")
library("readxl")
install.packages("ggpubr")
library(ggpubr)
install.packages("BSDA")
library(BSDA)
getwd()
setwd("C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test")
path <- "C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test\\Fyp Data.xlsx"
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$`Level-10HRV`
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$`Level10HRV`
level10_hrv <- df$Level10HRV
View(df)
View(df)
setwd("C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test")
path <- "C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test\\Fyp Data.xlsx"
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$Level10HRV
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level10_hrv <- na.omit(level10_hrv)
# Level-10 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 10
result_hrv <- binom.test(sum(level10_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 10
positive_increases <- sum(ratio_diff > 0)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
level10_hrv <- df$Level10HRV
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$Level10HRV
View(df)
setwd("C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test")
path <- "C:\\Users\\sints\\OneDrive - City University of Hong Kong - Student\\Desktop\\Fyp Test\\Fyp Data.xlsx"
df <- read_excel(path)
Screen<- df[c(1:6), c(1, 6)]
NoScreen <- df[c(1:6), c(1, 7)]
#樣本是否合符常態分佈
# 提取 NoScreen 中的數值列
screen_num <- Screen$`Screen`
# 提取 NoScreen 中的數值列
noscreen_num <- NoScreen$`NoScreen`
#執行符號檢定 (sign test)
sign_test_result <- binom.test(sum(screen_num > noscreen_num), length(screen_num), p = 0.5, alternative = "two.sided")
print(sign_test_result)
#執行 Wilcoxon signed-rank test
wilcox_test_result <- wilcox.test(screen_num, noscreen_num, paired = TRUE, alternative = "two.sided")
print(wilcox_test_result)
# Level-10 Ratio 數據
level1_ratio <- df$Level1Ratio
level10_ratio <- df$`Level10Ratio`
# 提取 Level 1 HRV 和 Level 10 HRV 數據
level1_hrv <- df$Level1HRV
level10_hrv <- df$Level10HRV
# 去除 NA 值
level1_hrv <- na.omit(level1_hrv)
level10_hrv <- na.omit(level10_hrv)
# Level-10 Ratio 數據
level1_ratio <- na.omit(level1_ratio)
level10_ratio <- na.omit(level10_ratio)
# Create difference vector
ratio_diff <- level10_ratio - level1_ratio
# Execute sign test
# For HRV one-sided test, assuming decrease at level 10
result_hrv <- binom.test(sum(level10_hrv < level1_hrv), length(level1_hrv), alternative = "greater")
# For pupil size one-sided test, assuming increase at level 10
positive_increases <- sum(ratio_diff > 0)
negative_increases <- sum(ratio_diff < 0)
ties <- sum(ratio_diff == 0)
total_non_ties <- positive_increases + negative_increases
if (total_non_ties == 0) {
result_pupil <- NA # 無法進行檢定
} else if (positive_increases >= negative_increases) {
result_pupil <- binom.test(positive_increases, total_non_ties, alternative = "greater")
} else {
result_pupil <- binom.test(negative_increases, total_non_ties, alternative = "less")
}
# Output results
print("HRV Sign Test Results:")
print(result_hrv)
print("Pupil Size Sign Test Results:")
print(result_pupil)
# Execute Wilcoxon signed rank test
result_hrv <- wilcox.test(level1_hrv, level10_hrv, alternative = "greater")
result_pupil <- wilcox.test(level1_ratio, level10_ratio, alternative = "less")
# Output results
print("HRV Wilcoxon Signed Rank Test Results:")
print(result_hrv)
print("Pupil Size Wilcoxon Signed Rank Test Results:")
print(result_pupil)
# 計算 HRV 和瞳孔大小的變化量
hrv_change <- level10_hrv - level1_hrv
pupil_change <- level10_ratio - level1_ratio
将变化量转换为二元分类
# 計算 HRV 和瞳孔大小的變化量
hrv_change <- level10_hrv - level1_hrv
pupil_change <- level10_ratio - level1_ratio
# 将变化量转换为二元分类
hrv_binary <- ifelse(hrv_change > 0, "Increase", "Decrease")
pupil_binary <- ifelse(pupil_change > 0, "Increase", "Decrease")
# 创建包含两个二元变量的数据框
data_frame <- data.frame(hrv_binary, pupil_binary)
# 创建列联表
contingency_table <- table(data_frame)
# 显示列联表
print("Contingency Table:")
print(contingency_table)
进行卡方检验
chisq_result <- chisq.test(contingency_table)
print("Chi-square Test Result:")
print(chisq_result)
